#####
#
# DO NOT EDIT THIS FILE
# Instead, copy default.yml to local.yml first and make your config changes in local.yml (or only include the changed
# options). Keep in mind that the YAML format does not like tabs as indentation, you have to use spaces.
#
# Every setting that accepts an id needs to be enclosed with double quotes (").
# The reason is that the ids are too big for Node to handle properly as a number.
# Saving it as a string explicitly works around this issue.
#
# If you don't know any of the Discord ids (like roles or channels), the bot includes a !exportids command which
# by default only the owner can execute. A text file with all the ids will be DM'd to you.
#
#####

discord:
  # You can assign emojis here; if an emoji has not been assigned (or the assigned one cannot be found), the default will be used
  # In order to use an emoji, change it to emoji name
  emojis:
    gold: gold
    silver: silver
    copper: copper


soundcloud:
  # Your SoundCloud client id token
  token: your-soundcloud-token


database:
  mongodb:
    uri: mongodb://127.0.0.1/kormir-discord-bot


cache:
  redis:
    prefix: "kormir-discord-bot-cache:"


#####
# Every activity (e.g. commands) in a module can be enabled and disabled separately.
#####
modules:
  # Provides general Guild Wars 2 related things
  guildwars2:
    # !register - API registration
    register:
      enabled: true
      # Code registration timeout in minutes
      timeout: 10

    # !forceregister - Forces API registration for an account
    force-register:
      enabled: true

    # !wiki - Allows searching the GW2 wiki
    wiki:
      enabled: true

    # !cats - Everyone wants a cat! Or two, or three...
    cats:
      enabled: true

    # !daily - Daily achievements
    daily:
      enabled: true

    # !raids - Weekly account progress for defeated raid wing encounters
    raids:
      enabled: true

    # !sab - Super Adventure Box character progression
    sab:
      enabled: true

    # !quaggan - Get a random quaggan image
    quaggan:
      enabled: true

    # !whois - Get the associated account name of one or more users
    whois:
      enabled: true

    # A chat code hook that automatically decodes chat codes mentioned in messages
    chat-code:
      enabled: true

    # Guild member role worker for maintaining the guild member role of users automatically
    guild-member-role:
      enabled: false
      # The role id where guild members should be part of
      role-id: role-id

    # World role worker for maintaining the world role of users automatically
    world-role:
      enabled: false
      # The role ids where various world (or server) members should be part of, example:
      # role-ids:
      #   1001: anvil-rock-role-id
      #   1002: borlis-pass-role-id
      role-ids: []

    # Periodically checks if the API is working, disabling this might have side-effects
    api-checker:
      enabled: true

    # Periodically checks for a new build
    build-checker:
      enabled: false
      # The target channel id to where new builds should be posted
      channel-id: channel-id
      # The rich embed message accent color
      richcolor: '#00C800'

    # Periodically checks for a new release notes
    release-notes-checker:
      enabled: false
      # The target channel id to where new release notes should be posted
      channel-id: channel-id
      # The rich embed message accent color
      richcolor: '#C8C800'

    # Periodically checks for a new blog posts
    blog-post-checker:
      enabled: false
      # The target channel id to where new release notes should be posted
      channel-id: channel-id
      # The rich embed message accent color
      richcolor: '#C86400'

    # Periodically checks for a new SoundCloud uploads
    soundcloud-checker:
      enabled: false
      # The target channel id to where new release notes should be posted
      channel-id: channel-id
      # The rich embed message accent color
      richcolor: '#00C8C8'

    # Periodically checks for new guild logs
    guild-log-checker:
      enabled: false
      # All the types listed below are supported by the API; if you want to change the types that are included,
      # copy only the ones you want and leave the rest
      types:
        - motd
        - invited
        - joined
        - kick
        - leave
        - rank_change
        - stash
        - treasury
        - upgrade
      # The target channel id to where the guild logs are posted
      channel-id: channel-id
      # The rich embed message accent color
      richcolor: '#9664FA'

    pof-nickname-countdown:
      enabled: false
      nickname: Kormir {{number}}

    # Guild leader API key for guild related features
    guild-leader-api-key:
    # The guild GUID for guild related features (see api.guildwars2.com/v2/guild/search?name=<guild_name>)
    guild-id: guild-id

  # Provides an event scheduler
  schedule:
    # The rich embed message accent color
    richcolor: '#00C8C8'

    # !events - List of scheduled events
    events:
      enabled: true

    # !event - Scheduled event
    event:
      enabled: true

    # !addevent - Add an event
    add-event:
      enabled: true

    # !editevent - Edit a scheduled event
    edit-event:
      enabled: true

    # !deleteevent - Remove a scheduled event
    delete-event:
      enabled: true

    # Background worker for reminders, disabling this might break stuff
    scheduler:
      enabled: true

  # Provides extra utilities
  utilities:
    # !roll - Rolling dice
    roll:
      enabled: true
      max-dice: 10
      max-faces: 100

  # Fun stuff
  fun:
    # React with the hearts if a message contains hearts
    heart:
      enabled: false

    # Respond with a thank you whenever someone mentions that something is quality <insert_quote>
    quality:
      enabled: false


#####
# The permissions are set up in a hierarchical way. If a person is a member of more than 1 group,
# the first matched command in either blacklist or whitelist in a group (top-down) from the list below gets priority.
# This means that if in groupA commandA is listed, and user is part of groupA and wants to execute commandB, it will
# fall back to the next first group (that is not groupA) that the user is also part of, that has commandB either
# whitelisted or blacklisted explicitly. If none has been found, it will fall back to the default group.
#
# Please note that if both blacklist and whitelist are matched, blacklist will take precedence.
#
# To add a new group, just add a new key and fill in the properties.
# Be sure to *not* delete default, as this is the fallback group in case nothing is matched.
# The asterisk can be used as a wildcard.
#
# It's good practice to copy this to your own local config and change it to your own likings, because
# when you define the root permissions property, you will override all of the roles defined below.
#####
permissions:
  owner:
    user-ids:
      - owner-id
    role-ids: []
    blacklist: []
    whitelist:
      # Makes sure every command is whitelisted for the owner.
      - "*"
      - "*:*"

  moderator:
    user-ids: []
    role-ids: []
    blacklist:
      - admin.*
    whitelist:
      # Even though it looks like all commands are whitelisted, it's not.
      # Blacklist takes precedence, the "*" in the whitelist is just a catch all so it doesn't fall back further.
      - "*"
      - "*:*"

  event-manager:
    user-ids: []
    role-ids: []
    blacklist: []
    whitelist:
      - schedule.*
      - schedule.*:*

  # The default group is a special case, if nothing has been blacklisted or whitelisted, it will accept all commands.
  # DO NOT define other groups below this one.
  default:
    blacklist:
      - admin.*
      - guildwars2.force-register
      - schedule.add-event
      - schedule.edit-event # To only disallow editing other users's events, use schedule.edit-event:other
      - schedule.delete-event # To only disallow deleting other users's events, use schedule.delete-event:other
    whitelist: []
