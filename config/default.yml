#####
#
# DO NOT EDIT THIS FILE
# Instead, copy default.yml to local.yml first and make your config changes in local.yml (or only include the changed
# options). Keep in mind that the YAML format does not like tabs as indentation, you have to use spaces.
#
# Every setting that accepts an id needs to be enclosed with double quotes (").
# The reason is that the ids are too big for Node to handle properly as a number.
# Saving it as a string explicitly works around this issue.
#
# If you don't know any of the Discord ids (like roles or channels), the bot includes a !exportids command which
# by default only the owner can execute. A text file with all the ids will be DM'd to you.
#
#####

language: en-US
timezone: Europe/Amsterdam


discord:
  # The bot's token can found on the bot's application page on discordapp.com/developers/applications/me
  token: your-token-should-be-here
  # Command prefix; in case there is another bot running you can change the prefix of this bot's commands
  command_prefix: "!"
  # The default middleware to use for every command (available middleware can be found in ./middleware)
  command_middleware:
    # Throttles the time to wait between every command execution for every user
    UserThrottleMiddleware:
      duration: 2
    # Automatically removes messages
    AutoRemoveMessageMiddleware:
      # Duration in seconds of command requests that are not allowed before they are removed (use false to disable)
      disallowed_request: 300
      # Duration in seconds of responses to command requests that are not allowed before they are removed (use false to disable)
      disallowed_response: 300

  # You can assign the emoji names here; if no emoji has been assigned (or the assigned one cannot be found), the default will be used
  # In order to use an emoji, change it to emoji name
  emojis:
    gold: gold
    silver: silver
    copper: copper


database:
  # The database provider (currently only mongodb is supported)
  provider: mongodb

  mongodb:
    uri: mongodb://127.0.0.1/kormir-discord-bot


cache:
  # The cache provider (only node and redis are supported)
  provider: node

  redis:
    host: 127.0.0.1
    port: 6379
    socket:
    password:
    database:
    prefix: "kormir-discord-bot-cache:"


#####
# Every command in a module can be enabled and disabled separately.
# The command to trigger on can be changed as well.
# You can restrict the channels where a command can be used by adding the channel ids as shown in the help command.
#####
modules:
  # Provides general stuff that probably should stay enabled
  general:
    commands:
      help:
        trigger: help
        enabled: true
        #channels:
        #  - first-channel-id
        #  - second-channel-id
      source:
        trigger: source
        enabled: true

  # Provides stuff for managing the bot
  manage:
    commands:
      export_ids:
        trigger: exportids
        enabled: true

  # Provides an event scheduler (required by certain other modules)
  schedule:
    commands:
      events:
        trigger: events
        enabled: true
      event:
        trigger: event
        enabled: true
      add_event:
        trigger: addevent
        enabled: true
      edit_event:
        trigger: editevent
        enabled: true
      delete_event:
        trigger: removeevent
        enabled: true

  # Provides general Guild Wars 2 related things
  guildwars2:
    commands:
      register:
        trigger: register
        enabled: true
        # Code registration timeout in minutes
        timeout: 10
      force_register:
        trigger: forceregister
        enabled: true
      wiki:
        trigger: wiki
        enabled: true

      # Everyone wants a cat! Or two, or three...
      cats:
        trigger: cats
        enabled: true

    hooks:
      member_role:
        enabled: false
      world_role:
        enabled: false

    release_checker:
      enabled: false
      # The target channel id to where new builds and release notes should be posted
      target_channel: channel-id
      # The timeout in minutes to wait between checks
      timeout: 5

    guild_log_checker:
      enabled: false
      # All the types listed are supported by the API, if you want to change the types that are included,
      # copy only the ones you want and leave the rest
      types:
        - motd
        - invited
        - joined
        - kick
        - leave
        - rank_change
        - stash
        - treasury
        - upgrade
      # The target channel id to where the guild logs are posted
      target_channel: channel-id
      # The timeout in minutes to wait between checks
      timeout: 10

    # Guild leader API key for guild related features
    guild_leader_api_key:
    # The guild GUID (see api.guildwars2.com/v2/guild/search?name=<guild_name>)
    guild_id: guild-id
    # The role id where guild members should be part of
    guild_member_role: role-id
    # The role ids where various world (or server) members should be part of, example:
    # world_member_roles:
    #   1001: anvil-rock-role-id
    #   1002: borlis-pass-role-id
    world_member_roles: []

  # Provies extra utilities
  utilities:
    commands:
      roll:
        trigger: roll
        enabled: true


#####
# The permissions are set up in a hierarchical way. If a person is a member of more than 1 group,
# the first matched command in either blacklist or whitelist in a group (top-down) from the list below gets priority.
# This means that if in groupA commandA is listed, and user is part of groupA and wants to execute commandB, it will
# fall back to the next first group (that is not groupA) that the user is also part of, that has commandB either
# whitelisted or blacklisted explicitly. If none has been found, it will fall back to the default group.
#
# Please note that if both blacklist and whitelist are matched, blacklist will take precedence.
#
# To add a new group, just add a new key and fill in the properties.
# Be sure to *not* delete default, as this is the fallback group in case nothing is matched.
# The asterisk can be used as a wildcard.
#####
permissions:
  owner:
    user_ids:
      - owner-id
    role_ids: []
    blacklist: []
    whitelist:
      - "*"
      - "*:*"

  moderator:
    user_ids: []
    role_ids: []
    blacklist:
      - manage.*
    whitelist:
      # Even though it looks like all commands are whitelisted, it's not.
      # Blacklist takes precedence, the "*" in the whitelist is just a catch all so it doesn't fall back further.
      - "*"
      - "*:*"

  event_manager:
    user_ids: []
    role_ids: []
    blacklist: []
    whitelist:
      - schedule.*
      - schedule.*:*

  # The default group is a special case, if nothing has been blacklisted or whitelisted, it will accept all commands.
  # DO NOT define other groups below this one.
  default:
    blacklist:
      - manage.*
      - guildwars2.force_register
      - schedule.add_event
      - schedule.edit_event # To only disallow editing other users's events, use schedule.edit_event:other
      - schedule.delete_event # To only disallow deleting other users's events, use schedule.delete_event:other
    whitelist: []
