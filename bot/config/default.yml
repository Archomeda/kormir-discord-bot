#####
#
# DO NOT EDIT THIS FILE IN YOUR APP DIRECTLY
# You have to supply your own ./config/default.yml and ./config/local.yml.
#
# The app default config is read-only to the bot, should not contain private information and must be shared in repositories.
# The app local config is writable to the bot, can contain private information and must not be shared in repositories.
#
# The app local config has priority for searching for a config.
# If an item is not found, it will continue to look in the app default config.
# If it's also not found there, it will look in this default config.
#
#####

language: en-US
timezone: Europe/Amsterdam


discord:
  # This sets the bot's currently playing status; if empty, it will be ignored
  game: Guild Wars 2
  # The bot's token can found on the bot's application page on discordapp.com/developers/applications/me
  token: your-token-should-be-here
  # Throttles the responses of the bot for every user separately to prevent spam (duration in seconds)
  throttle: 2

  commands:
    # The command prefix (in case there is another bot running, you can change the prefix to prevent conflicts)
    prefix: "!"

    paged_reply:
      # Default reactions to browse through a paged reply, can be overridden separately by a command
      reactions:
        first: ⏮
        last: ⏭
        previous: ◀
        next: ▶


database:
  # The database provider (only mongodb is supported, use false to disable)
  provider: mongodb

  mongodb:
    # Good practice to change this if you have multiple bots running in order to prevent conflicts
    uri: mongodb://127.0.0.1/discord-bot


cache:
  # The cache provider (only node and redis are supported, use false to disable)
  provider: node

  redis:
    host: 127.0.0.1
    port: 6379
    socket:
    password:
    database:
    # Good practice to change this if you have multiple bots running in order to prevent conflicts
    prefix: "discord-bot-cache:"


#####
# Every activity (e.g. commands) in a module can be enabled and disabled separately.
#####
modules:
  general:
    # !help - Commands list
    help:
      enabled: true

    # !info - General bot information
    info:
      enabled: true

  admin:
    # !exportids - Exports a list of all found ids
    export-ids:
      enabled: true


#####
# The permissions are set up in a hierarchical way. If a person is a member of more than 1 group,
# the first matched command in either blacklist or whitelist in a group (top-down) from the list below gets priority.
# This means that if in groupA commandA is listed, and user is part of groupA and wants to execute commandB, it will
# fall back to the next first group (that is not groupA) that the user is also part of, that has commandB either
# whitelisted or blacklisted explicitly. If none has been found, it will fall back to the default group.
#
# Please note that if both blacklist and whitelist are matched, blacklist will take precedence.
#
# To add a new group, just add a new key and fill in the properties.
# Be sure to *not* delete default, as this is the fallback group in case nothing is matched.
# The asterisk can be used as a wildcard.
#
# It's good practice to copy this to your own app's default AND local config and change it to your own likings, because
# when you define the root permissions property, you will override all of the roles defined below.
#####
permissions:
  owner:
    user_ids:
      - owner-id
    role_ids: []
    blacklist: []
    whitelist:
      # Makes sure every command is whitelisted for the owner.
      - "*"
      - "*:*"

  moderator:
    user_ids: []
    role_ids: []
    blacklist:
      - admin.*
    whitelist:
      # Even though it looks like all commands are whitelisted, it's not.
      # Blacklist takes precedence, the "*" in the whitelist is just a catch all so it doesn't fall back further.
      - "*"
      - "*:*"

  # The default group is a special case, if nothing has been blacklisted or whitelisted, it will accept all commands.
  # DO NOT define other groups below this one.
  default:
    blacklist: []
    whitelist: []
