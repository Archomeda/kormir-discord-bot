{
  "_meta": {
    "name": "Guild Wars 2"
  },
  "common": {
    "minute": "{{count}} minute",
    "minute_plural": "{{count}} minutes"
  },
  "register": {
    "_meta": {
      "name": "API key registration",
      "short-description": "Registers your Guild Wars 2 account with an API key",
      "long-description": "Registers your Guild Wars 2 account to your Discord account with a Guild Wars 2 API key.",
      "param-key": "Guild Wars 2 account API key"
    },
    "response-see-dm": "Registering your Guild Wars 2 API key can only be done through a DM. Please check the message I sent to you. If the message doesn't show up, make sure you haven't blocked direct messages.",
    "response-message-removed-see-dm": "Your message has been removed for privacy reasons. Please send a DM to register your API key.",
    "response-info": "Registering your Guild Wars 2 API key with your Discord account is very easy. Please follow these steps:\n\n",
    "response-reregister": "You've already registered the following API key: `{{key}}`. Continuing will replace your existing API key:\n\n",
    "response-register-steps": " 1. Go to https://account.arena.net/applications\n 2. Click the button \"New Key\"\n 3. Think of a good API key name, and be sure to include the following text in it: **{{code}}**\n 4. Only the *account* permission is required; every other permission is optional, but it's useful to enable them if you want to use more bot features\n 5. Click the button \"Create API key\"\n 6. Find your newly created API key and copy it\n 7. Reply to me with `{{register}} <key>` where `<key>` is your key\n 8. If anything went wrong, I'll be sure to let you know\n\nYou have **$t(module.guildwars2:common.minute, {'count': {{time}} })** before the code **{{code}}** expires. Executing the command `{{register}}` again will invalidate this code and generate a new one.",
    "response-generation-failed": "An error occured while generating an API key code.",
    "response-no-code": "You tried registering an API key without running `{{register}}` first, or the code has expired. Please run the command `{{register}}` again before adding an API key to obtain a unique code.",
    "response-registered": "Welcome {{account_name}}! Your API key **{{key_name}}** has been successfully registered. Please note that this API key should **not** be deleted. In case you ever want to update your API key with different permissions, you can register a new one by going through the same process.",
    "response-wrong-name": "Your API key **{{name}}** doesn't include the text **{{code}}** in the name. Please create a new key and include it in the name."
  },
  "force-register": {
    "_meta": {
      "name": "API key registration",
      "short-description": "Force-registers a Guild Wars 2 account to a Discord account with an API key",
      "long-description": "Force-registers a Guild Wars 2 account to a specified Discord account id with a Guild Wars 2 API key, bypassing the ownership check.",
      "param-id": "The Discord account id (can be obtained by enabling developer mode, right clicking on a Discord account and clicking *Copy ID*)",
      "param-key": "Guild Wars 2 account API key"
    },
    "response-registered": "Successfully registered {{account_name}}.",
    "response-see-dm": "Force registering a Guild Wars 2 API key can only be done through a DM.",
    "response-message-removed-see-dm": "Your message has been removed for privacy reasons. Please send a DM to force register API keys."
  },
  "wiki": {
    "_meta": {
      "name": "Wiki search",
      "short-description": "Searches the Guild Wars 2 Wiki for an article",
      "long-description": "Searches the Guild Wars 2 Wiki for an article and returns a summary and the article link if found.",
      "param-terms": "Search terms"
    },
    "response-title": "{{title}}",
    "response-description": "{{description}}",
    "response-empty": "No detailed information found.",
    "response-not-found": "Your request did not come up with any results. Try using different search terms.",
    "response-no-title": "Please provide a wiki article title or search terms."
  },
  "cats": {
    "_meta": {
      "name": "Cats",
      "short-description": "Shows all the cats you own",
      "long-description": "Shows all the cats you own."
    },
    "cat-1": "Beetletun cat",
    "cat-2": "Lion's Shadow Inn cat",
    "cat-3": "Lion's Arch cooking station cat",
    "cat-4": "Hawkgates cooking station cat",
    "cat-5": "Divinity's Reach cooking station cat",
    "cat-6": "Dry Top Entry cat",
    "cat-7": "Prosperity cat",
    "cat-8": "Camp Resolve cat",
    "cat-9": "Vinewrath Tangle cat",
    "cat-10": "The Grove day cat",
    "cat-11": "The Grove night cat",
    "cat-12": "Warrior cat",
    "cat-13": "Mesmer cat",
    "cat-14": "Ranger cat",
    "cat-15": "Guardian cat",
    "cat-16": "Elementalist cat",
    "cat-17": "Engineer cat",
    "cat-18": "Revenant cat",
    "cat-19": "Thief cat",
    "cat-20": "Necromancer cat",
    "cat-21": "Ember Bay skritt cat",
    "cat-22": "Ember Bay circus cat",
    "cat-23": "Feline Familiar",
    "cat-24": "Bitterfrost Frontier snow leopard cub",
    "cat-25": "Black Citadel soup cat",
    "cat-26": "Hoelbrak soup cat",
    "cat-27": "Rata Sum soup cat",
    "cat-28": "The Grove soup cat",
    "cat-29": "Lady Wisteria Whiskington",
    "cat-32": "Ghost cat",
    "cat-33": "Super Adventure Box cat",
    "cat-34": "Holographic Kitten",
    "cat-35": "Simon",
    "cat-36": "Blue Catmander",
    "cat-37": "Yellow Catmander",
    "cat-unknown": "Unknown cat {{id}} ({{hint}})",
    "owned-cats": "Owned",
    "missing-cats": "Missing",
    "response-title": "{{user}}'s cats",
    "response-no-cats": "You currently don't own any of the cats üòø",
    "response-all-cats": "You own all the cats üòª",
    "response-number-cats": "You own {{count}} out of {{total}} cats üò∫",
    "response-more-information": "For more information, [go to the wiki](https://wiki.guildwars2.com/wiki/Hungry_cat_scavenger_hunt)."
  },
  "daily": {
    "_meta": {
      "name": "Daily achievements",
      "short-description": "Shows today's daily achievements",
      "long-description": "Shows today's daily achievements",
      "param-tomorrow": "Get tomorrow's dailies instead by using the subcommand *tomorrow*"
    },
    "response-title": "Daily achievements",
    "response-description": "Time remaining: {{timeleft}}.",
    "response-achievement": "{{name}} ({{access}})",
    "achievement-unknown": "(({{id}}))",
    "category-pve": "PvE",
    "category-pvp": "PvP",
    "category-wvw": "WvW",
    "category-fractals": "Fractals",
    "category-special": "Special",
    "category-unknown": "Unknown ({{category}})",
    "access-GuildWars2": "Core",
    "access-HeartOfThorns": "HoT",
    "aceess-PathOfFire": "PoF",
    "access-unknown": "Unknown ({{access}})",
    "pve-regex": "Daily (.+)",
    "pvp-regex": "Daily PvP (.+)",
    "wvw-regex": "Daily (?:WvW )?(.+)",
    "fractals-regex": "(?:Daily Recommended Fractal‚Äî(Scale \\d+)|Daily Tier \\d (.+))",
    "daily-regex": "(.+)"
  },
  "raids": {
    "_meta": {
      "name": "Raid progress",
      "short-description": "Shows your raid progress",
      "long-description": "Shows your raid progress of this week."
    },
    "raid-forsaken_thicket": "Forsaken Thicket",
    "wing-spirit_vale": "Spirit Vale",
    "encounter-vale_guardian": "Vale Guardian",
    "encounter-spirit_woods": "Spirit Woods",
    "encounter-gorseval": "Gorseval",
    "encounter-sabetha": "Sabetha",
    "wing-salvation_pass": "Salvation Pass",
    "encounter-slothasor": "Slothasor",
    "encounter-bandit_trio": "Bandit Trio",
    "encounter-matthias": "Matthias",
    "wing-stronghold_of_the_faithful": "Stronghold of the Faithful",
    "encounter-escort": "Escort",
    "encounter-keep_construct": "Keep Construct",
    "encounter-twisted_castle": "Twisted Castle",
    "raid-bastion_of_the_penitent": "Bastion of the Penitent",
    "wing-bastion_of_the_penitent": "Bastion of the Penitent",
    "encounter-xera": "Xera",
    "encounter-cairn": "Cairn the Indomitable",
    "encounter-mursaat_overseer": "Mursaat Overseer",
    "encounter-samarog": "Samarog",
    "encounter-deimos": "Deimos",
    "raid-unknown": "Raid {{id}}",
    "wing-unknown": "Wing {{id}}",
    "encounter-unknown": "Encounter {{id}}",
    "response-summary-title": "{{user}}'s weekly raid progress ‚Äì To do",
    "response-summary-wing": "**{{wing}}:** {{encounters}}",
    "response-summary-done": "You have nothing left to do.",
    "response-details-title": "{{user}}'s weekly raid progress ‚Äì {{raid}}",
    "response-details-raid-wing-field": "{{raid}}: {{wing}}",
    "response-details-wing-field": "{{wing}}",
    "response-details-encounter-done": "‚òë {{encounter}}",
    "response-details-encounter-missing": "‚ûñ {{encounter}}",
    "response-pages-title": "Pages",
    "response-pages-description-summary": "üìñ Summary",
    "response-pages-description-raid": "{{emoji}} Detailed: {{description}}"
  },
  "sab": {
    "_meta": {
      "name": "Super Adventure Box progress",
      "short-description": "Shows the SAB progress for a character",
      "long-description": "Shows the Super Adventure Box progress for a specific character.",
      "param-character": "Character name"
    },
    "zone-101": "101 - Sunny Glade {{completion}}",
    "zone-102": "102 - Dark Woords {{completion}}",
    "zone-103": "103 - Kingdom of Fungus {{completion}}",
    "zone-201": "201 - Rapids {{completion}}",
    "zone-202": "202 - Pain Cliffs {{completion}}",
    "zone-203": "203 - Storm Top {{completion}}",
    "zone-infantile-completed": "üå§",
    "zone-normal-completed": "‚òÅ",
    "zone-tribulation-completed": "üå©",
    "upgrade-1": "Chain Sticks",
    "upgrade-3": "Slingshot",
    "upgrade-6": "Whip",
    "upgrade-9": "Mini Bomb",
    "upgrade-12": "Candle",
    "upgrade-13": "Torch",
    "upgrade-15": "Wooden Whistle",
    "upgrade-18": "Digger",
    "upgrade-19": "Nice Scoop",
    "upgrade-21": "Glove of Wisdom",
    "upgrade-24": "Bauble Purse",
    "upgrade-25": "Bauble Tote Bag",
    "upgrade-27": "Moto's Breath",
    "upgrade-28": "Moto's Finger",
    "upgrade-31": "Health Vessel 1",
    "upgrade-32": "Health Vessel 2",
    "upgrade-34": "Medium Health Bottle",
    "upgrade-unlocked": "‚òë {{upgrade}}",
    "upgrade-locked": "‚ûñ {{upgrade}}",
    "song-1": "Secret Song",
    "song-2": "Gatekeeper Lullaby",
    "song-3": "Shatter Serenade",
    "song-unlocked": "‚òë {{song}}",
    "song-locked": "‚ûñ {{song}}",
    "response-title": "{{character}}'s Super Adventure Box progress",
    "response-title-zone": "Completed zones",
    "response-information-zone": "*Completion legend*\nüå§ Infantile mode\n‚òÅ Normal mode\nüå© Tribulation mode",
    "response-title-upgrades": "Unlocked upgrades",
    "response-title-songs": "Unlocked songs",
    "response-more-information": "For more information, go to the wiki for the [zones](https://wiki.guildwars2.com/wiki/Super_Adventure_Box#Worlds_and_zones), [upgrades](https://wiki.guildwars2.com/wiki/List_of_Super_Adventure_Box_upgrades_and_skills#Upgrades) or [songs](https://wiki.guildwars2.com/wiki/Wooden_Whistle#Songs)."
  },
  "quaggan": {
    "_meta": {
      "name": "Quaggan",
      "short-description": "Shows a random quaggan",
      "long-description": "Shows a random quaggan.",
      "param-id": "The quaggan id for less randomness"
    },
    "response": "FooOOooo ‚Äì Quaggan {{id}}"
  },
  "whois": {
    "_meta": {
      "name": "Whois",
      "short-description": "Shows the account name of registered users",
      "long-description": "Shows the Guild Wars 2 account name of registered users.",
      "param-users": "The users (mentioned by using the `@` symbol, supports multiple values)"
    },
    "response": "The following users have registered their Guild Wars 2 accounts:\n{{users}}",
    "response-user": "‚óè {{user}}: {{account_name}}",
    "response-empty": "None of the mentioned users have registered their Guild Wars 2 accounts"
  },
  "chat-code": {
    "response-message": "{{user}} has included Guild Wars 2 chat codes in their message:",
    "response-item": "`{{code}}` ‚Äì {{name}} (item {{id}}) ‚Äì [W]({{wiki}} \"Wiki\")",
    "response-map": "`{{code}}` ‚Äì {{name}} ({{type}} {{id}}) ‚Äì [W]({{wiki}} \"Wiki\")",
    "response-skill": "`{{code}}` ‚Äì {{name}} (skill {{id}}) ‚Äì [W]({{wiki}} \"Wiki\")",
    "response-trait": "`{{code}}` ‚Äì {{name}} (trait {{id}}) ‚Äì [W]({{wiki}} \"Wiki\")",
    "response-recipe": "`{{code}}` ‚Äì Recipe: {{name}} (recipe {{id}}) ‚Äì [W]({{wiki}} \"Wiki\")",
    "response-skin": "`{{code}}` ‚Äì {{name}} (skin {{id}}) ‚Äì [W]({{wiki}} \"Wiki\")",
    "response-outfit": "`{{code}}` ‚Äì {{name}} (outfit {{id}}) ‚Äì [W]({{wiki}} \"Wiki\")",
    "response-objective": "`{{code}}` ‚Äì {{name}} (objective {{id}}) ‚Äì [W]({{wiki}} \"Wiki\")",
    "poi-waypoint": "waypoint",
    "poi-landmark": "point of interest",
    "poi-vista": "vista",
    "poi-unknown": "unknown"
  },
  "build-checker": {
    "build-title": "Guild Wars 2 Update",
    "build-description": "Guild Wars 2 has been updated to build {{build}}."
  },
  "release-notes-checker": {
    "notes-title": "{{title}}",
    "notes-description": "{{description}}"
  },
  "blog-post-checker": {
    "post-title": "{{title}}",
    "post-description": "{{description}}"
  },
  "announcement-checker": {
    "announcement-title": "{{title}}",
    "announcement-description": "{{description}}"
  },
  "guild-log-checker": {
    "motd-title": "Message of the Day",
    "motd-description": "{{motd}}",
    "motd-footer": "Updated by {{user}}",
    "roster-title": "Guild Roster",
    "invited-description": "‚óè {{user}} has been invited by {{invited_by}}",
    "joined-description": "‚óè {{user}} has joined",
    "kicked-description": "‚óè {{user}} has been kicked by {{kicked_by}}",
    "left-description": "‚óè {{user}} has left",
    "rank-changed-description": "‚óè {{user}}'s rank has been changed from {{old_rank}} to {{new_rank}} by {{changed_by}}",
    "stash-title": "Guild Stash",
    "stash-item-deposit-description": "‚óè {{user}} has deposited {{count}}x {{item}}",
    "stash-item-withdraw-description": "‚óè {{user}} has withdrawn {{count}}x {{item}}",
    "stash-coins-deposit-description": "‚óè {{user}} has deposited {{coins}}",
    "stash-coins-withdraw-description": "‚óè {{user}} has withdrawn {{coins}}",
    "treasury-title": "Guild Treasury",
    "treasury-description": "‚óè {{user}} has deposited {{count}}x {{item}}",
    "upgrade-title": "Guild Upgrades",
    "upgrade-description": "‚óè {{user}} has added {{count}}x {{upgrade}} ({{total}} in storage)",
    "coins-gold": "g",
    "coins-silver": "s",
    "coins-copper": "c"
  },
  "soundcloud-checker": {
    "track-title": "{{title}}",
    "track-description": "A new Guild Wars 2 music track has been uploaded to SoundCloud.\n\n{{description}}\n\n[Open web player]({{url}})",
    "track-description-downloadable": "A new Guild Wars 2 music track has been uploaded to SoundCloud.\n\n{{description}}\n\n[Open web player]({{url}}) | [Download directly]({{download}})",
    "track-player": "Embedded player for **{{title}}**: {{url}}"
  },
  "api": {
    "response-error": "The API responded with the following error: {{error}}.",
    "response-error-permission": "Your API key doesn't have the required permissions. This command requires the following: {{permissions}}.",
    "response-error-status": "The API request did not succeed: HTTP status {{status}}.",
    "response-error-unknown": "The API responded with an unknown error.",
    "response-fire": "The API is on üî•, please call the üöí.\nOn a more serious note, this means that the API is currently inaccessible, please try again later.",
    "response-not-registered": "You haven't registered your API key yet. Please register your API key first."
  }
}
